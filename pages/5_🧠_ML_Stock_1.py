# pages/5_üß†_ML_Stock_1.py
# -*- coding: utf-8 -*-
from pathlib import Path
import json
import pandas as pd
import streamlit as st

st.set_page_config(page_title="Conclusion ‚Ä¢ Stock Buy Prediction", page_icon="‚úÖ", layout="wide")

# ---------- CSS (‡πÉ‡∏ä‡πâ .format() ‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á f-string ‡∏Å‡∏±‡∏ö {}) ----------
CSS = """
<style>
h1,h2,h3{letter-spacing:.2px}
.hr{height:1px;background:#edf2f7;margin:14px 0;border:0}
.card{border:1px solid #e8edf3;border-radius:14px;padding:14px;background:#ffffff}
.badge{display:inline-block;padding:2px 10px;border-radius:999px;background:#eef6ff;border:1px solid #d6e7ff;color:#1e5a96;font-size:12px}
.kicker{font-size:12.5px;color:#6b7b85;margin-bottom:6px}
.block-title{font-weight:700;font-size:18px;margin:6px 0 2px}
.subtle{color:#5f6c72}
</style>
"""
st.markdown(CSS, unsafe_allow_html=True)

ROOT = Path(".")
MODEL_META = ROOT / "model_meta.json"

# ---------- ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ----------
FEATURE_THAI = {
    "revenue_growth_ttm": ("‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ (TTM)", "‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏™‡∏∞‡∏™‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏á‡∏ß‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤"),
    "gross_margin_ttm":   ("‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≥‡πÑ‡∏£‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πâ‡∏ô (TTM)", "‡∏Å‡∏≥‡πÑ‡∏£‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏ï‡πà‡∏≠‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°"),
    "operating_margin_ttm":("‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≥‡πÑ‡∏£‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô (TTM)", "‡∏Å‡∏≥‡πÑ‡∏£‡∏à‡∏≤‡∏Å‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏´‡∏•‡∏±‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô"),
    "net_margin_ttm":     ("‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≥‡πÑ‡∏£‡∏™‡∏∏‡∏ó‡∏ò‡∏¥ (TTM)", "‡∏Å‡∏≥‡πÑ‡∏£‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡∏ï‡πà‡∏≠‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°"),
    "roe_ttm":            ("ROE (TTM)", "‡∏Å‡∏≥‡πÑ‡∏£‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡∏ï‡πà‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏ñ‡∏∑‡∏≠‡∏´‡∏∏‡πâ‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢"),
    "roa_ttm":            ("ROA (TTM)", "‡∏Å‡∏≥‡πÑ‡∏£‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡∏ï‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢"),
    "debt_to_equity":     ("Debt/Equity", "‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏¥‡∏ô‡∏£‡∏ß‡∏°‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏ñ‡∏∑‡∏≠‡∏´‡∏∏‡πâ‡∏ô"),
    "ocf_to_cl":          ("OCF / Current Liabilities", "‡∏Å‡∏£‡∏∞‡πÅ‡∏™‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏¥‡∏ô‡∏´‡∏°‡∏∏‡∏ô‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô"),
    "interest_coverage":  ("Interest Coverage", "EBIT / ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏à‡πà‡∏≤‡∏¢"),
    "asset_turnover_ttm": ("Asset Turnover (TTM)", "‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÉ‡∏ä‡πâ‡∏™‡∏¥‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢"),
}

# ---------- ‡∏≠‡πà‡∏≤‡∏ô meta ----------
feature_cols = list(FEATURE_THAI.keys())
suffix = ".BK"
horizon = 6
if MODEL_META.exists():
    meta = json.loads(MODEL_META.read_text(encoding="utf-8"))
    feature_cols = meta.get("feature_cols", feature_cols)
    suffix = meta.get("exchange_suffix", suffix)
    horizon = meta.get("forward_months", horizon)

# ---------- Section 1 ----------
st.title("‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠ (ML Project: Stock Buy Prediction)")
st.markdown("""
**1. ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÅ‡∏ô‡∏ß‡∏Ñ‡∏¥‡∏î‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå (Overview)**  
‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏ö‡∏ö Machine Learning ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏±‡∏î‡∏Å‡∏£‡∏≠‡∏á‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ó‡∏¢ ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô (Fundamental Factors) ‡πÄ‡∏ä‡πà‡∏ô ROE, Debt-to-Equity, Margin, OCF/CL ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ß‡πà‡∏≤‡∏´‡∏∏‡πâ‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡∏°‡∏µ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏° ‚Äò‡∏ô‡πà‡∏≤‡∏ã‡∏∑‡πâ‡∏≠‚Äô ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å 6 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤

- Flowchart: Input ‚Üí Model ‚Üí Output  
- Feature: ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å model_meta.json
""")
st.markdown("<div class='hr'></div>", unsafe_allow_html=True)

# ---------- Section 2 ----------
st.header("Section 2: ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Feature ‡πÅ‡∏•‡∏∞ Target")
st.code('df["target"] = (df["forward_6m_return"] > 0).astype(int)', language="python")
st.markdown("- target = 1 ‚Üí ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏°‡∏µ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô {h} ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô\n- target = 0 ‚Üí ‡πÑ‡∏°‡πà‡∏Ç‡∏∂‡πâ‡∏ô (‡∏•‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏£‡∏á‡∏ï‡∏±‡∏ß)".format(h=horizon))
st.markdown("<div class='hr'></div>", unsafe_allow_html=True)

# ---------- Section 3 (‡∏Ñ‡∏á‡πÑ‡∏ß‡πâ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡∏≠) ----------
st.header("Section 3: ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ (10 ‡∏ï‡∏±‡∏ß) ‚Äî ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢")
st.write("‡∏ï‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: `{s}`  ‚Ä¢  ‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏Å‡∏≤‡∏£‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå: {h} ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤".format(s=suffix, h=horizon))

cols = st.columns(2)
CARD_HTML = """
<div class="card">
  <div class="kicker">feature key</div>
  <div class="badge">{key}</div>
  <div class="block-title">{th_name}</div>
  <div class="subtle">{th_desc}</div>
</div>
"""
for i, key in enumerate(feature_cols):
    th_name, th_desc = FEATURE_THAI.get(key, (key, "-"))
    with cols[i % 2]:
        st.markdown(CARD_HTML.format(key=key, th_name=th_name, th_desc=th_desc), unsafe_allow_html=True)

st.markdown("<div class='hr'></div>", unsafe_allow_html=True)

# ---------- Section 4 ----------
st.header("Section 4: Pipeline & Training (‡∏¢‡πà‡∏≠)")
st.code(
"""pipe = Pipeline([
    ("imputer", SimpleImputer(strategy="median")),
    ("rf", RandomForestClassifier(
        n_estimators=400, max_depth=6, min_samples_leaf=5,
        random_state=42, class_weight="balanced_subsample"
    ))
])
pipe.fit(X_train, y_train)""",
    language="python",
)
st.markdown("- ‡πÉ‡∏ä‡πâ RandomForestClassifier ‡πÅ‡∏•‡∏∞‡∏à‡∏π‡∏ô Threshold ‡πÉ‡∏´‡πâ F1-Score ‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏ö‡∏ô‡∏ä‡∏∏‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö")
st.markdown("<div class='hr'></div>", unsafe_allow_html=True)

# ---------- Section 5 ----------
st.header("Section 5: ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ (Outputs)")
c1, c2, c3 = st.columns(3)
with c1:
    st.subheader("üìò dataset_financials_ttm.csv (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)")
    st.table(pd.DataFrame([{"ticker":"PTT","ROE":0.18,"ROA":0.09,"Debt/Equity":1.2,"Target":1}]))
with c2:
    st.subheader("üìó feature_importance.csv (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)")
    st.table(pd.DataFrame([
        {"Feature":"ROE_TTM","Importance":0.27},
        {"Feature":"Debt_to_equity","Importance":0.21},
        {"Feature":"OCF_to_CL","Importance":0.14},
        {"Feature":"Net_margin_ttm","Importance":0.12},
        {"Feature":"ROA_ttm","Importance":0.10},
    ]))
with c3:
    st.subheader("üìô predictions_latest.csv (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)")
    st.table(pd.DataFrame([
        {"Ticker":"SAPPE","Prob_Buy":0.88,"Pred":"‚úÖ"},
        {"Ticker":"AOT","Prob_Buy":0.72,"Pred":"‚úÖ"},
        {"Ticker":"IRPC","Prob_Buy":0.35,"Pred":"‚ùå"},
    ]))
st.markdown("<div class='hr'></div>", unsafe_allow_html=True)

# ---------- Section 6 ----------
st.header("Section 6: ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠ (Conclusion Slide)")
st.markdown("""
- ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å Yahoo Finance  
- ‚úÖ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô 10 ‡∏ï‡∏±‡∏ß  
- ‚úÖ ‡πÉ‡∏ä‡πâ Random Forest ‡∏à‡∏≥‡πÅ‡∏ô‡∏Å ‚Äú‡∏´‡∏∏‡πâ‡∏ô‡∏ô‡πà‡∏≤‡∏ã‡∏∑‡πâ‡∏≠‚Äù  
- ‚úÖ Export ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á Feature  
- üöÄ ‡∏ï‡πà‡∏≠‡∏¢‡∏≠‡∏î: Dashboard & Alert System
""")
st.success("‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏•‡πâ‡∏ß ‚úÖ")
